apiVersion: v1
kind: Template
metadata:
  annotations:
    iconClass: icon-rh-tomcat
    openshift.io/provider-display-name: Red Hat, Inc.
    description: Application template for JWS PostgreSQL applications with persistent storage built using S2I.
    tags: tomcat,tomcat8,java,jboss
    version: 1.4.15
    openshift.io/display-name: JBoss Web Server 3.1 Apache Tomcat 8 + PostgreSQL (with https)
  name: monapp
labels:
  template: jws31-tomcat8-postgresql-persistent-s2i
  xpaas: 1.4.15
message: C'est bon, c'est créée...
parameters:
- displayName: Application Name
  description: The name for the application
  name: APPLICATION_NAME
  value: jws-app
  required: true
- displayName: ImageStream Namespace
  description: Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.
  name: IMAGE_STREAM_NAMESPACE
  value: openshift
  required: true
- displayName: PostgreSQL Image Stream Tag
  description: The tag to use for the \"postgresql\" image stream.  Typically, this aligns with the major.minor version of PostgreSQL.
  name: POSTGRESQL_IMAGE_STREAM_TAG
  value: '9.5'
  required: true
- displayName: Database Username
  description: Database user name
  name: DB_USERNAME
  from: 'user[a-zA-Z0-9]{3}'
  generate: expression
  required: true
- displayName: Database Password
  description: Database user password
  name: DB_PASSWORD
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  required: true
- displayName: Database Name
  description: Database name
  name: DB_DATABASE
  value: root
  required: true
- displayName: PostgreSQL Maximum number of connections
  description: The maximum number of client connections allowed. This also sets the maximum number of prepared transactions.
  name: POSTGRESQL_MAX_CONNECTIONS
  required: false
- displayName: PostgreSQL Shared Buffers
  description: Configures how much memory is dedicated to PostgreSQL for caching data.
  name: POSTGRESQL_SHARED_BUFFERS
  required: false
- displayName: Database Volume Capacity
  description: Size of persistent storage for database volume.
  name: VOLUME_CAPACITY
  value: 1Gi
  required: true
objects:
- apiVersion: v1
  kind: Service
  spec:
    ports:
    - port: 5432
      targetPort: 5432
    selector:
      deploymentConfig: ${APPLICATION_NAME}-postgresql
  metadata:
    name: ${APPLICATION_NAME}-postgresql
    labels:
      application: ${APPLICATION_NAME}
    annotations:
      description: The database server's port.
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APPLICATION_NAME}-postgresql
    labels:
      application: ${APPLICATION_NAME}
  spec:
    strategy:
      type: Recreate
      resources:
        limits:
          cpu: 1
          memory: 512Mi
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}-postgresql
        from:
          kind: ImageStreamTag
          namespace: ${IMAGE_STREAM_NAMESPACE}
          name: postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}
    - type: ConfigChange
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}-postgresql
    template:
      metadata:
        name: ${APPLICATION_NAME}-postgresql
        labels:
          deploymentConfig: ${APPLICATION_NAME}-postgresql
          application: ${APPLICATION_NAME}
      spec:
        terminationGracePeriodSeconds: 60
        containers:
        - name: ${APPLICATION_NAME}-postgresql
          image: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
          livenessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 30
            tcpSocket: 
              port: 5432
          volumeMounts:
          - mountPath: /var/lib/pgsql/dat
            name: ${APPLICATION_NAME}-postgresql-pvol
          env:
          - name: POSTGRESQL_USER
            value: ${DB_USERNAME}
          - name: POSTGRESQL_PASSWORD
            value: ${DB_PASSWORD}
          - name: POSTGRESQL_DATABASE
            value: ${DB_DATABASE}
          - name: POSTGRESQL_MAX_CONNECTIONS
            value: ${POSTGRESQL_MAX_CONNECTIONS}
          - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
            value: ${POSTGRESQL_MAX_CONNECTIONS}
          - name: POSTGRESQL_SHARED_BUFFERS
            value: ${POSTGRESQL_SHARED_BUFFERS}
        volumes:
        - name: ${APPLICATION_NAME}-postgresql-pvol
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-postgresql-claim
- apiVersion: v1
  kind: PersistentVolumeClaim        
  metadata:
    name: ${APPLICATION_NAME}-postgresql-claim
    labels:
      application: ${APPLICATION_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
